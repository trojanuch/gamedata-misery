----------------------------------------------------------
--	lead_ballast.script
--  Original scripting done by the NARODNAYA SOLYANKA team
--  Modified for use in Misery 2.0+ by Yastiandrie

--	Script Adjust's Virtual Weight of the Lead Container Depending on what artefacts are inside
----------------------------------------------------------

local current_ballast_weight = 0
local ballast_num = 0
local lost_ballast_id = -1

 
function on_lose_ballast(obj)
  lost_ballast_id = obj:id()
end

function check_ballast()
	local obj = nil
	if lost_ballast_id > 0 then
		obj = alife():object(lost_ballast_id)
		if obj then
	--		alun_utils.printf("lead_ballast.check_ballast: Abnormal Ballast Change. Purging")
			alife():release(alife():object(obj.id), true)
			ballast_num = 0
		end

   		lost_ballast_id = -1
	end

	if ballast_num < 0 then
		ballast_num = 0
	end
  
	local t = convert_kg_to_num(current_ballast_weight)
	if (t ~= ballast_num) then
	--	alun_utils.printf("lead_ballast.check_ballast: adjusting ballast")
		local a = db.actor
		obj = a:object("lead_ballast")
		
		if obj then
			alife():release(alife():object(obj:id()), true)
		end
    
		if t>0 then
			alife():create_ammo("lead_ballast", a:position(), a:level_vertex_id(), a:game_vertex_id(), a:id(), t)
		end
    
		ballast_num = t
	end
--	alun_utils.printf("lead_ballast.check_ballast: Ballast num= "..tostring(ballast_num))
end

function change_ballast(delta)
  current_ballast_weight = current_ballast_weight + delta
end

function create_ballast()
  local t = convert_kg_to_num(current_ballast_weight)
end

function convert_kg_to_num(kg)
  local n = math.floor(kg*100)
  if n>50000 then
    return 50000
  end
  return n
end
 